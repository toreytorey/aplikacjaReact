{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wiktoria\\\\desktop\\\\React 1\\\\react1\\\\src\\\\index.js\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { FilterableProductTable } from './FilterableProductTable'; // class ProductCategoryRow extends React.Component {\n//   render() {\n//     const category = this.props.category;\n//     return (\n//       <tr>\n//         <th colSpan=\"2\"> \n//           {category}\n//         </th>\n//       </tr>\n//     );\n//   }\n// }\n// class ProductRow extends React.Component {\n//   render() {\n//     const product = this.props.product;\n//     const name = product.stocked ?\n//       product.name :\n//       <span style={{color: 'red'}}>\n//         {product.name}\n//       </span>;\n//     return (\n//       <tr>\n//         <td>{name}</td>\n//         <td>{product.price}</td>\n//       </tr>\n//     );\n//   }\n// }\n// class ProductTable extends React.Component {\n//   render() {\n//     const filterText = this.props.filterText;\n//     const inStockOnly = this.props.inStockOnly;\n//     const rows = [];\n//     let lastCategory = null;\n//     this.props.products.forEach((product) => {\n//       if (product.name.indexOf(filterText) === -1) {\n//         return;\n//       }\n//       if (inStockOnly && !product.stocked) {\n//         return;\n//       }\n//       if (product.category !== lastCategory) {\n//         rows.push(\n//           <ProductCategoryRow\n//             category={product.category}\n//             key={product.category} />\n//         );\n//       }\n//       rows.push(\n//         <ProductRow\n//           product={product}\n//           key={product.name} />\n//       );\n//       lastCategory = product.category;\n//     });\n//     return (\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//           </tr>\n//         </thead>\n//         <tbody>{rows}</tbody>\n//       </table>\n//     );\n//   }\n// }\n// class SearchBar extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n//     this.handleInStockChange = this.handleInStockChange.bind(this);\n//   }\n//   handleFilterTextChange(e) {\n//     this.props.onFilterTextChange(e.target.value);\n//   }\n//   handleInStockChange(e) {\n//     this.props.onInStockChange(e.target.checked);\n//   }\n//   render() {\n//      return (\n//       <form>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search...\" \n//           value = {this.props.filterText}\n//           onChange = {this.handleFilterTextChange} />\n//         <p>\n//           <input type=\"checkbox\" \n//           checked = {this.props.inStockOnly} \n//           onChange = {this.handleInStockChange}/>\n//           {' '}\n//           Only show products in stock\n//         </p>\n//       </form>\n//     );\n//   }\n// }\n// class FilterableProductTable extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     //ustalenie początkowego stanu aplikacji\n//     this.state = {\n//       filterText: '', //stan: wyszukiwana fraza\n//       inStockOnly: false //stan: wartość zaznaczonego pola\n//     };\n//     this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n//     this.handleInStockChange = this.handleInStockChange.bind(this);\n//   }\n//   handleFilterTextChange(filterText) {\n//     this.setState({\n//       filterText: filterText\n//     });\n//   }\n//   handleInStockChange(inStockOnly) {\n//     this.setState({\n//       inStockOnly: inStockOnly\n//     })\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {/* wymaga stanu, aby filtrować listę produktów */}\n//         <SearchBar\n//           filterText={this.state.filterText}\n//           inStockOnly={this.state.inStockOnly}\n//           onFilterTextChange = {this.handleFilterTextChange}\n//           onInStockChange = {this.handleInStockChange}\n//         />\n//         {/* wymaga stanu, aby wyświetlać wyszukiwaną frazę i wartość zaznaczonego pola */}\n//         <ProductTable\n//           products={this.props.products} \n//           filterText={this.state.filterText}\n//           inStockOnly={this.state.inStockOnly}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCTS = [{\n  category: \"Owoce\",\n  price: \"10.50\",\n  priceFor: \"/ kg\",\n  stocked: true,\n  name: \"Truskawki\"\n}, {\n  category: \"Owoce\",\n  price: \"15.90\",\n  priceFor: \"/ kg\",\n  stocked: true,\n  name: \"Arbuz\"\n}, {\n  category: \"Owoce\",\n  price: \"1.50\",\n  priceFor: \"/ szt.\",\n  stocked: false,\n  name: \"Brzoskwinia\"\n}, {\n  category: \"Warzywa\",\n  price: \"2.50\",\n  priceFor: \"/ szt.\",\n  stocked: true,\n  name: \"Ogórek\"\n}, {\n  category: \"Warzywa\",\n  price: \"5.20\",\n  priceFor: \"/ kg\",\n  stocked: false,\n  name: \"Ziemniaki\"\n}, {\n  category: \"Warzywa\",\n  price: \"8.40\",\n  priceFor: \"/ kg\",\n  stocked: true,\n  name: \"Ziemniaki Bio\"\n}, {\n  category: \"Warzywa\",\n  price: \"4.60\",\n  priceFor: \"/ szt.\",\n  stocked: true,\n  name: \"Brokuły\"\n}, {\n  category: \"Słodycze\",\n  price: \"1.99\",\n  priceFor: \"/ szt.\",\n  stocked: true,\n  name: \"Baton Mars\"\n}, {\n  category: \"Słodycze\",\n  price: \"2.29\",\n  priceFor: \"/ szt.\",\n  stocked: false,\n  name: \"Baton KitKat\"\n}, {\n  category: \"Słodycze\",\n  price: \"12.90\",\n  priceFor: \"/ kg\",\n  stocked: false,\n  name: \"Cukierki\"\n}, {\n  category: \"Słodycze\",\n  price: \"14.60\",\n  priceFor: \"/ kg\",\n  stocked: true,\n  name: \"Ciastka\"\n}];\nlet a = parseFloat(PRODUCTS.price);\n\nlet element = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"a\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 179,\n  columnNumber: 15\n}, this);\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(FilterableProductTable, {\n  products: PRODUCTS\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 182,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Wiktoria/desktop/React 1/react1/src/index.js"],"names":["render","React","ReactDOM","FilterableProductTable","PRODUCTS","category","price","priceFor","stocked","name","a","parseFloat","element","document","getElementById"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {FilterableProductTable} from './FilterableProductTable';\n\n\n// class ProductCategoryRow extends React.Component {\n//   render() {\n//     const category = this.props.category;\n//     return (\n//       <tr>\n//         <th colSpan=\"2\"> \n//           {category}\n//         </th>\n//       </tr>\n//     );\n//   }\n// }\n\n// class ProductRow extends React.Component {\n//   render() {\n//     const product = this.props.product;\n//     const name = product.stocked ?\n//       product.name :\n//       <span style={{color: 'red'}}>\n//         {product.name}\n//       </span>;\n\n//     return (\n//       <tr>\n//         <td>{name}</td>\n//         <td>{product.price}</td>\n//       </tr>\n//     );\n//   }\n// }\n\n// class ProductTable extends React.Component {\n//   render() {\n//     const filterText = this.props.filterText;\n//     const inStockOnly = this.props.inStockOnly;\n    \n//     const rows = [];\n//     let lastCategory = null;\n    \n//     this.props.products.forEach((product) => {\n//       if (product.name.indexOf(filterText) === -1) {\n//         return;\n//       }\n//       if (inStockOnly && !product.stocked) {\n//         return;\n//       }\n//       if (product.category !== lastCategory) {\n//         rows.push(\n//           <ProductCategoryRow\n//             category={product.category}\n//             key={product.category} />\n//         );\n//       }\n//       rows.push(\n//         <ProductRow\n//           product={product}\n//           key={product.name} />\n//       );\n//       lastCategory = product.category;\n//     });\n\n//     return (\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//           </tr>\n//         </thead>\n//         <tbody>{rows}</tbody>\n//       </table>\n//     );\n//   }\n// }\n\n// class SearchBar extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n//     this.handleInStockChange = this.handleInStockChange.bind(this);\n//   }\n  \n//   handleFilterTextChange(e) {\n//     this.props.onFilterTextChange(e.target.value);\n//   }\n  \n//   handleInStockChange(e) {\n//     this.props.onInStockChange(e.target.checked);\n//   }\n  \n//   render() {\n//      return (\n//       <form>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search...\" \n//           value = {this.props.filterText}\n//           onChange = {this.handleFilterTextChange} />\n//         <p>\n//           <input type=\"checkbox\" \n//           checked = {this.props.inStockOnly} \n//           onChange = {this.handleInStockChange}/>\n//           {' '}\n//           Only show products in stock\n//         </p>\n//       </form>\n//     );\n//   }\n// }\n\n// class FilterableProductTable extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     //ustalenie początkowego stanu aplikacji\n//     this.state = {\n//       filterText: '', //stan: wyszukiwana fraza\n//       inStockOnly: false //stan: wartość zaznaczonego pola\n//     };\n\n//     this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n//     this.handleInStockChange = this.handleInStockChange.bind(this);\n//   }\n    \n//   handleFilterTextChange(filterText) {\n//     this.setState({\n//       filterText: filterText\n//     });\n//   }\n  \n//   handleInStockChange(inStockOnly) {\n//     this.setState({\n//       inStockOnly: inStockOnly\n//     })\n//   }\n  \n//   render() {\n//     return (\n//       <div>\n//         {/* wymaga stanu, aby filtrować listę produktów */}\n//         <SearchBar\n//           filterText={this.state.filterText}\n//           inStockOnly={this.state.inStockOnly}\n//           onFilterTextChange = {this.handleFilterTextChange}\n//           onInStockChange = {this.handleInStockChange}\n//         />\n//         {/* wymaga stanu, aby wyświetlać wyszukiwaną frazę i wartość zaznaczonego pola */}\n//         <ProductTable\n//           products={this.props.products} \n//           filterText={this.state.filterText}\n//           inStockOnly={this.state.inStockOnly}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nconst PRODUCTS = [\n  {category: \"Owoce\", price: \"10.50\", priceFor: \"/ kg\", stocked: true, name: \"Truskawki\"},\n  {category: \"Owoce\", price: \"15.90\", priceFor: \"/ kg\", stocked: true, name: \"Arbuz\"},\n  {category: \"Owoce\", price: \"1.50\", priceFor: \"/ szt.\", stocked: false, name: \"Brzoskwinia\"},\n  {category: \"Warzywa\", price: \"2.50\", priceFor: \"/ szt.\", stocked: true, name: \"Ogórek\"},\n  {category: \"Warzywa\", price: \"5.20\", priceFor: \"/ kg\", stocked: false, name: \"Ziemniaki\"},\n  {category: \"Warzywa\", price: \"8.40\", priceFor: \"/ kg\", stocked: true, name: \"Ziemniaki Bio\"},\n  {category: \"Warzywa\", price: \"4.60\", priceFor: \"/ szt.\", stocked: true, name: \"Brokuły\"},\n  {category: \"Słodycze\", price: \"1.99\", priceFor: \"/ szt.\", stocked: true, name: \"Baton Mars\"},\n  {category: \"Słodycze\", price: \"2.29\", priceFor: \"/ szt.\", stocked: false, name: \"Baton KitKat\"},\n  {category: \"Słodycze\", price: \"12.90\", priceFor: \"/ kg\", stocked: false, name: \"Cukierki\"},\n  {category: \"Słodycze\", price: \"14.60\", priceFor: \"/ kg\", stocked: true, name: \"Ciastka\"}\n];\n\nlet a = parseFloat(PRODUCTS.price);\nlet element = <div>a</div>\n\nReactDOM.render(\n  <FilterableProductTable products={PRODUCTS} />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}